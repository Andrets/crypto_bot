services:
  postgresql:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      network:
        ipv4_address: 67.16.1.77

  backend:
    restart: always
    build:
      context: ./CryptoAPI
      dockerfile: Dockerfile
    environment:
      - TELEGRAM_API_TOKEN=${TELEGRAM_API_TOKEN}
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_REGION=${MINIO_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - MAX_REQUESTS=${MAX_REQUESTS}
      - MAX_TIME_REQUEST_SECONDS=${MAX_TIME_REQUEST_SECONDS}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - BOT_ID=${BOT_ID}
      - BOT_LINK=${BOT_LINK}
      - DEFAULT_AVATAR=${DEFAULT_AVATAR}
      - CLIENT_ID=${CLIENT_ID}
    ports:
      - 8080:8080
    depends_on:
      - postgresql
    networks:
      network:
        ipv4_address: 67.16.1.154

  frontend:
    build:
      context: ./tg-mini-app-master
      dockerfile: Dockerfile.prod
    restart: always
    ports:
      - 3000:3000
    volumes:
      - './tg-mini-app-master/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - backend
    networks:
      network:
        ipv4_address: 67.16.1.64

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.prod
    ports:
      - 9088:9088
      - 443:443
    restart: always
    volumes:
      - './gateway/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro'
      - '/etc/letsencrypt/live/aenolabs.com/cert.pem:/etc/nginx/certs/cert.pem:ro'
      - '/etc/letsencrypt/live/aenolabs.com/chain.pem:/etc/nginx/certs/chain.pem:ro'
      - '/etc/letsencrypt/live/aenolabs.com/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro'
      - '/etc/letsencrypt/live/aenolabs.com/privkey.pem:/etc/nginx/certs/privkey.pem:ro'
    depends_on:
      - backend
      - minio
      - frontend
    networks:
      network:
        ipv4_address: 67.16.1.7

  minio:
    image: quay.io/minio/minio:RELEASE.2023-06-09T07-32-12Z
    ports:
      - 9000:9000
      - 9001:9001
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    command: server /data --console-address ":9001"
    networks:
      network:
        ipv4_address: 67.16.1.152

  bot:
    build: ./CryptoBot
    restart: always
    depends_on:
      - backend
    environment:
      - TELEGRAM_API_TOKEN=${TELEGRAM_API_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
    networks:
      network:
        ipv4_address: 67.16.1.153

volumes:
  postgresql:
  minio_data:
  minio_config:

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 67.16.0.0/16
          gateway: 67.16.0.1
